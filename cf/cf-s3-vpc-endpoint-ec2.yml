AWSTemplateFormatVersion: '2010-09-09'
Description: Create a VPC with public and private subnets, and EC2 instances for SSH access.

Parameters:
  BucketName:
    Type: String
    Description: The name of the S3 bucket to host the static website.
    Default: my-cool-reports-2019
  VPNIpRanges:
    Type: CommaDelimitedList
    Default: 10.0.0.0/16
    Description: List of IP ranges (CIDR blocks) used by the company VPN (e.g., 203.0.113.0/24).
  CidrBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC.
  LocalIp:
    Type: String
    Default: 41.113.160.98/32 
    Description: Your local machine's IP address (CIDR format) for SSH access.
  AmiId:
    Type: String
    Default: ami-0ac4dfaf1c5c0cce9
    Description: AMI Image Id  
  KeyPair:
    Type: String
    Default: mykp02
    Description: Ec2 Key Pair

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: S3Vpc

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # Private Subnet 1
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [0, !GetAZs '']

  # Private Subnet 2
  # PrivateSubnet2:
  #   Type: AWS::EC2::Subnet
  #   Properties:
  #     VpcId: !Ref VPC
  #     CidrBlock: 10.0.2.0/24
  #     MapPublicIpOnLaunch: false
  #     AvailabilityZone: !Select [1, !GetAZs '']    

# S3 Bucket for Static Website Hosting
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  # Bucket Policy to Restrict Access to VPC Endpoint and VPN IP Ranges
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowAccessFromVPCAndVPN
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub '${S3Bucket.Arn}/*'
            Condition:
              StringEquals:
                aws:SourceVpce: !Ref S3VpcEndpoint
              # IpAddress:
              #   aws:SourceIp: !Ref VPNIpRanges

  # VPC Endpoint for S3
  S3VpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref VPC
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref PrivateRouteTable1
        # - !Ref PrivateRouteTable2

  # Security Groups
  PublicInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access to public EC2 instance
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref LocalIp

  PrivateInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH access from public instance
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref PublicInstanceSecurityGroup

  # EC2 Instances
  PublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref PublicInstanceSecurityGroup
      ImageId: !Ref AmiId  # Amazon Linux 2 AMI (replace with a valid AMI for your region)
      Tags:
        - Key: Name
          Value: PublicInstance

  PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      SubnetId: !Ref PrivateSubnet1
      SecurityGroupIds:
        - !Ref PrivateInstanceSecurityGroup
      ImageId: !Ref AmiId # Amazon Linux 2 AMI (replace with a valid AMI for your region)
      Tags:
        - Key: Name
          Value: PrivateInstance

  # Route Table for Private Subnet 1
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  # Route Table for Private Subnet 2
  # PrivateRouteTable2:
  #   Type: AWS::EC2::RouteTable
  #   Properties:
  #     VpcId: !Ref VPC

  # PrivateSubnet2RouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     SubnetId: !Ref PrivateSubnet2
  #     RouteTableId: !Ref PrivateRouteTable2

Outputs:
  VPCId:
    Description: The ID of the created VPC.
    Value: !Ref VPC

  PublicInstanceId:
    Description: The ID of the public EC2 instance.
    Value: !Ref PublicInstance

  PrivateInstanceId:
    Description: The ID of the private EC2 instance.
    Value: !Ref PrivateInstance

  PublicInstancePublicIP:
    Description: Public IP of the public EC2 instance.
    Value: !GetAtt PublicInstance.PublicIp

  S3WebsiteURL:
    Description: The URL of the S3 static website.
    Value: !Sub 'http://${S3Bucket}.s3-website-${AWS::Region}.amazonaws.com'